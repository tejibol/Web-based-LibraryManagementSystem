@model UserProfileViewModel
@{
    ViewData["Title"] = "User Profile";
}

@section Styles {
    <style>
        body {
            padding-top: 60px;
            background-color: #f8f9fa;
        }

        .profile-container {
            margin-left: 220px;
            padding: 2rem;
            min-height: 100vh;
        }

        .profile-header-card {
            background: #ffffff;
            border-radius: 15px;
            box-shadow: 0 4px 25px rgba(0,0,0,0.08);
            margin-bottom: 2rem;
            overflow: hidden;
            border: none;
        }

        .profile-header-content {
            padding: 2.5rem;
            background: linear-gradient(135deg, #2c3e50 0%, #3498db 100%);
            color: white;
        }

        .profile-image-container {
            transition: all 0.3s ease;
            border-radius: 50%;
            width: 180px;
            height: 180px;
            overflow: hidden;
            margin: 0 auto;
            border: 4px solid #fff;
            box-shadow: 0 6px 20px rgba(0,0,0,0.15);
        }

            .profile-image-container img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                border-radius: 50%;
            }

        .section-card {
            background: white;
            border-radius: 15px;
            box-shadow: 0 4px 25px rgba(0,0,0,0.08);
            margin-bottom: 2rem;
            overflow: hidden;
        }

        .table-dark-header {
            background: #2c3e50;
            color: white;
        }

            .table-dark-header th {
                border-bottom: 2px solid #3498db !important;
                font-weight: 500;
                padding: 1.2rem 1.5rem;
            }

        .status-badge {
            font-size: 0.85em;
            letter-spacing: 0.5px;
            padding: 0.5em 1em;
            border-radius: 8px;
        }

        .btn-edit {
            background: linear-gradient(135deg, #3498db 0%, #2c3e50 100%);
            border: none;
            padding: 0.8rem 2rem;
            border-radius: 10px;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            color: white;
        }

            .btn-edit:hover {
                transform: translateY(-2px);
                box-shadow: 0 5px 15px rgba(52, 152, 219, 0.3);
            }

            .btn-edit::after {
                content: '';
                position: absolute;
                top: -50%;
                left: -50%;
                width: 200%;
                height: 200%;
                background: rgba(255,255,255,0.1);
                transform: rotate(45deg);
                transition: all 0.5s ease;
            }

            .btn-edit:hover::after {
                left: 50%;
                top: 50%;
            }

        .info-alert {
            background: rgba(52, 152, 219, 0.1);
            border: 1px solid rgba(52, 152, 219, 0.2);
            border-radius: 10px;
            backdrop-filter: blur(5px);
            padding: 1rem;
        }

        .empty-state {
            padding: 3rem 1rem;
            text-align: center;
            color: #6c757d;
        }

            .empty-state i {
                font-size: 2.5rem;
                color: #3498db;
                margin-bottom: 1rem;
                opacity: 0.8;
            }

        .section-header {
            font-size: 1.5rem;
            font-weight: 600;
            background-color: #e9f4fc;
            padding: 1rem 1.5rem;
            border-bottom: 1px solid #d0e3f1;
        }

        .book-card {
            transition: all 0.3s ease;
            cursor: pointer;
            box-shadow: 0 4px 6px rgba(0,0,0,0.05);
            border-radius: 15px;
            overflow: hidden;
            height: 100%;
        }

        .book-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 16px rgba(0,0,0,0.1);
        }

        .book-cover {
            height: 200px;
            object-fit: cover;
            width: 100%;
        }

        .borrow-count-badge {
            position: absolute;
            top: 10px;
            right: 10px;
            background: rgba(44, 62, 80, 0.9);
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-size: 0.9rem;
            backdrop-filter: blur(5px);
        }

        .last-borrowed {
            font-size: 0.85rem;
            color: #6c757d;
        }
    </style>
}

<div class="profile-container">
    <!-- Profile Header -->
    <div class="profile-header-card">
        <div class="profile-header-content">
            <div class="row align-items-center">
                <div class="col-md-3 text-center">
                    <div class="profile-image-container">
                        <img src="@(Model.ProfilePictureUrl ?? "/images/niggachad.png")"
                             alt="Profile Picture"
                             style="width: 180px; height: 180px; object-fit: cover;"
                             class="img-fluid rounded-circle shadow">
                    </div>
                    <div class="mt-3">
                        <span class="status-badge bg-primary">@Model.Role</span>
                    </div>
                </div>

                <div class="col-md-9">
                    <h1 class="mb-3">@Model.FirstName @Model.LastName</h1>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="d-flex align-items-center mb-3">
                                <i class="fas fa-envelope me-3 fa-lg"></i>
                                <span class="h5 mb-0">@Model.Email</span>
                            </div>
                            <div class="d-flex align-items-center mb-3">
                                <i class="fas fa-calendar me-3 fa-lg"></i>
                                <span class="h5 mb-0">Member since @Model.CreatedAt.ToString("MMM dd, yyyy")</span>
                            </div>
                        </div>
                        @if (Model.Role == "Student")
                        {
                            <div class="col-md-6">
                                <div class="d-flex align-items-center mb-3">
                                    <i class="fas fa-id-card me-3 fa-lg"></i>
                                    <span class="h5 mb-0">LRN: @Model.LRN</span>
                                </div>
                                <div class="d-flex align-items-center mb-3">
                                    <i class="fas fa-users me-3 fa-lg"></i>
                                    <span class="h5 mb-0">Section: @Model.Section</span>
                                </div>
                                <div class="d-flex align-items-center">
                                    <i class="fas fa-calendar-alt me-3 fa-lg"></i>
                                    <span class="h5 mb-0">Year: @Model.YearLevel</span>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (Model.Role == "Student")
    {
        <!-- Most Borrowed Books Section - Visible to all users -->
        <div class="section-card">
            <div class="section-header">
                <i class="fas fa-star me-2"></i>Most Borrowed Books
            </div>
            <div class="p-4">
                @if (Model.MostBorrowedBooks.Any())
                {
                    <div class="row g-4">
                        @foreach (var book in Model.MostBorrowedBooks)
                        {
                            <div class="col-md-4">
                                @{
                                    var controller = User.IsInRole("Student") ? "Student" : "Librarian";
                                }
                                @if (User.IsInRole("SystemAdmin"))
                                {
                                    <div class="card book-card">
                                        <div class="position-relative">
                                            @if (!string.IsNullOrEmpty(book.CoverImageUrl))
                                            {
                                                <img src="@book.CoverImageUrl" class="book-cover" alt="Book cover">
                                            }
                                            else
                                            {
                                                <div class="book-cover bg-light d-flex align-items-center justify-content-center">
                                                    <i class="fas fa-book fa-4x text-muted"></i>
                                                </div>
                                            }
                                            <span class="borrow-count-badge">
                                                <i class="fas fa-book-reader me-1"></i>
                                                Borrowed @book.BorrowCount times
                                            </span>
                                        </div>
                                        <div class="card-body">
                                            <h5 class="card-title text-dark">@book.Title</h5>
                                            <p class="card-text text-muted">@book.Author</p>
                                            <p class="last-borrowed mb-0">
                                                <i class="fas fa-clock me-1"></i>
                                                Last borrowed: @book.LastBorrowed.ToString("MMM dd, yyyy")
                                            </p>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <a asp-controller="@controller" asp-action="ViewBook" asp-route-id="@book.BookId" class="text-decoration-none">
                                        <div class="card book-card">
                                            <div class="position-relative">
                                                @if (!string.IsNullOrEmpty(book.CoverImageUrl))
                                                {
                                                    <img src="@book.CoverImageUrl" class="book-cover" alt="Book cover">
                                                }
                                                else
                                                {
                                                    <div class="book-cover bg-light d-flex align-items-center justify-content-center">
                                                        <i class="fas fa-book fa-4x text-muted"></i>
                                                    </div>
                                                }
                                                <span class="borrow-count-badge">
                                                    <i class="fas fa-book-reader me-1"></i>
                                                    Borrowed @book.BorrowCount times
                                                </span>
                                            </div>
                                            <div class="card-body">
                                                <h5 class="card-title text-dark">@book.Title</h5>
                                                <p class="card-text text-muted">@book.Author</p>
                                                <p class="last-borrowed mb-0">
                                                    <i class="fas fa-clock me-1"></i>
                                                    Last borrowed: @book.LastBorrowed.ToString("MMM dd, yyyy")
                                                </p>
                                            </div>
                                        </div>
                                    </a>
                                }
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="text-center text-muted py-5">
                        <i class="fas fa-book-open fa-3x mb-3"></i>
                        <p class="mb-0">No frequently borrowed books yet</p>
                    </div>
                }
            </div>
        </div>

        <!-- Current Borrowings -->
        <div class="section-card">
            <div class="section-header">Currently Borrowed Books</div>
            <div class="table-responsive">
                <table class="table mb-0 table-hover">
                    <thead class="table-dark-header">
                        <tr>
                            <th>Book Title</th>
                            <th>Borrow Date</th>
                            <th>Due Date</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.CurrentBorrowings.Any())
                        {
                            foreach (var borrowing in Model.CurrentBorrowings)
                            {
                                <tr>
                                    <td>@borrowing.Book?.Title</td>
                                    <td>@borrowing.BorrowDate.ToString("MMM dd, yyyy")</td>
                                    <td>@borrowing.DueDate.ToString("MMM dd, yyyy")</td>
                                    <td>
                                        @{
                                            var daysRemaining = (borrowing.DueDate - DateTime.Now).Days;
                                            var statusClass = daysRemaining < 0 ? "danger" : "warning";
                                        }
                                        <span class="status-badge bg-@statusClass">
                                            @if (daysRemaining < 0)
                                            {
                                                @:Overdue (@Math.Abs(daysRemaining)d)
                                            }
                                            else
                                            {
                                                @:Due in @daysRemaining days
                                            }
                                        </span>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="4" class="empty-state">
                                    <i class="fas fa-book-open"></i>
                                    <div class="h5 mt-2">No currently borrowed books</div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Borrowing History -->
        <div class="section-card">
            <div class="section-header">Borrowing History</div>
            <div class="table-responsive">
                <table class="table mb-0 table-hover">
                    <thead class="table-dark-header">
                        <tr>
                            <th>Book Title</th>
                            <th>Borrow Date</th>
                            <th>Return Date</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.BorrowingHistory.Any())
                        {
                            foreach (var history in Model.BorrowingHistory)
                            {
                                <tr>
                                    <td>@history.Book?.Title</td>
                                    <td>@history.BorrowDate.ToString("MMM dd, yyyy")</td>
                                    <td>@(history.ReturnDate?.ToString("MMM dd, yyyy") ?? "N/A")</td>
                                    <td>
                                        @if (history.ReturnDate > history.DueDate)
                                        {
                                            <span class="status-badge bg-danger">Late (@((history.ReturnDate - history.DueDate)?.Days)d)</span>
                                        }
                                        else
                                        {
                                            <span class="status-badge bg-success">Returned</span>
                                        }
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="4" class="empty-state">
                                    <i class="fas fa-history"></i>
                                    <div class="h5 mt-2">No borrowing history found</div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }

    <!-- Action Section -->
    <div class="mt-4">
        @if (User.IsInRole("SystemAdmin"))
        {
            <a href="/SystemAdmin/EditUser/@Model.UserId" class="btn btn-primary">Edit Profile</a>
        }
        else if (User.IsInRole("Student"))
        {
            <form asp-action="UploadProfilePicture" method="post" enctype="multipart/form-data">
                <input type="file" name="profilePicture" accept="image/*" />
                <button type="submit" class="btn btn-secondary">Upload Profile Picture</button>
            </form>
        }
    </div>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
}
